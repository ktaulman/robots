{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Desktop/robots/robots/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport { robots } from './robots';\nimport SearchBox from './SearchBox'; //PROPS== what you pass in. Come out of STATE \n//STATE== object that describes your application.\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"robofriends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"RoboFriends \"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevin/Desktop/robots/robots/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACvBK,EAAAA,WAAW,GAAE;AACT;;AADS,SAebC,cAfa,GAeGC,KAAD,IAAS;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAACF,KAAK,CAACG,MAAN,CAAaC;AAA1B,OAAd;AACH,KAjBY;;AAET,SAAKC,KAAL,GAAW;AACPV,MAAAA,MAAM,EAAC,EADA;AAEPO,MAAAA,WAAW,EAAE;AAFN,KAAX;AAKH;;AAEDI,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADpB,EAEKF,IAFL,CAEUG,KAAK,IAAI,KAAKV,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAACgB;AAAT,KAAd,CAFnB;AAGH;;AAMDC,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG,KAAKR,KAAL,CAAWV,MAAX,CAAkBmB,MAAlB,CAAyBnB,MAAM,IAAE;AACpD,aAAOA,MAAM,CAACoB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKZ,KAAL,CAAWH,WAAX,CAAuBc,WAAvB,EAAnC,CAAP;AACH,KAFsB,CAAvB;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKjB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEc,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAhCsB;;AAsC3B,eAAehB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from './CardList';\nimport {robots} from './robots';\nimport SearchBox from './SearchBox';\n\n//PROPS== what you pass in. Come out of STATE \n//STATE== object that describes your application.\n\nclass App extends Component{\n    constructor(){\n        super();\n        this.state={\n            robots:[],\n            searchfield: ''\n        }\n   \n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=>response.json())\n            .then(users => this.setState({ robots:users}));\n    }\n\n    onSearchChange=(event)=>{\n        this.setState({searchfield:event.target.value})\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robots=>{\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n       \n        return(\n            <div className=\"tc\">\n                <h1 id=\"robofriends\">RoboFriends </h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <CardList robots={filteredRobots}/>\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}